1.	介绍购票系统的整体结构
	整体分为三个模块，用户管理、车站管理、车票管理，主要业务在车票的查询和购买，使用redis缓存余票信息，使用分布式锁防止超卖的情况

2.	整个项目的体量是怎么样的，多少文件、多少代码
	我说3个大块，每一块包括controller、service和dao差不多20多，一共小100 个文件。整体框架是照着写的，局部实现进行修改，比如用位图存储已售信息

3.	分库分表怎么实现的
	根据业务垂直分，根据数据水平分（这里分库和分表还是要区分一下，哪里用的分库，哪里用的分表）

4.	什么时候进行分库，什么时候进行分表，分片键的选择，分片算法及应用场景
	
5.	除了分库分表，还有什么能提高查询效率，有大量请求访问数据库该怎么办
	缓存，索引

6.	介绍MySQL事务解决了什么问题
	ACID

7.	缓存不一致问题是什么，怎么解决
	缓存不一致是用redis做缓存的时候，并发读写导致redis里的数据和MySQL数据不一致的问题。使用CacheAside，先修改数据库再删除缓存

8.	介绍MySQL数据结构

9.	介绍SpringBoot的Ioc和AOP原理及场景

10.	手撕：LCR 022. 环形链表 II - 力扣（LeetCode）
